#include <bits/stdc++.h>
using namespace std;
inline long long mod_exp(long long base, long long exp, long long modd) { unsigned long long ans = 1; base %= modd; while(exp > 0) { if(exp%2==1) ans = (base*ans)%modd; exp /= 2; base = (base*base)%modd; } return ans; }
#define fastio ios::sync_with_stdio(0);cin.tie(0)
using ll = long long;
const ll MOD = 1e9 + 7;
vector<ll> factorial {1,1}, invFactorial {1,1};
long long modfactorial(long long n) {
    for(ll i = factorial.size(); i <= n; i++) {
        factorial.push_back((i * factorial[i - 1]) % MOD);
        invFactorial.push_back(mod_exp(factorial.back(), MOD-2, MOD));
    }
    return factorial[n];
}

bool init() {
    fastio;
    modfactorial(110); // precompute
    return true;
}
bool y = init();
