#include <iostream>
using namespace std;

typedef long long ll;
#define MOD 1000000007

// Modular Exponentiation function
ll modExpo(ll a, ll b, ll mod) {
    ll res = 1;
    while (b > 0) {
        if (b & 1) res = (res * a) % mod;
        a = (a * a) % mod;
        b = b >> 1;
    }
    return res;
}

// Modular Multiplication function
ll mod_mul(ll a, ll b, ll m) {
    a = a % m;
    b = b % m;
    return (((a * b) % m) + m) % m;
}

ll mminvprime(ll a, ll b) {
    return modExpo(a, b - 2, b);  // Fermat's Little Theorem
}

ll mod_div(ll a, ll b, ll m) {
    a = a % m;
    b = b % m;
    return (mod_mul(a, mminvprime(b, m), m) + m) % m;
}

int main() {
    ll a = 10, b = 3;
    cout << "Modular division of " << a << " by " << b << " mod " << MOD << " is " << mod_div(a, b, MOD) << endl;
    return 0;
}
