#include<bits/stdc++.h>
#pragma GCC optimize("O3,unroll-loops")
#include<iostream>
#include<cstdlib>
#include<ctime>
#include<vector>
#include<map>
#include<set>
#include<deque>
#include<stack>
#include<queue>
using namespace std;

/*-----------------------For Input & Output------------------------------*/
#define Code ios_base::sync_with_stdio(false);
#define By cin.tie(NULL);cout.tie(NULL); 
#define Nitesh05 ll t;cin>>t;for(ll i=1;i<=t;i++){solve(i);}
/*-----------------------------------------------------------------------*/

/*-------------------------For Saving Time----------------------------------------*/
#define ll long long
#define MOD 1000000007
#define MOD1 998244353
#define INF 1e18
#define pb push_back
#define ppb pop_back
#define pll pair<ll,ll>
#define mp make_pair
#define ff first
#define ss second
#define PI 3.141592653589793238462
#define set_bits __builtin_popcountll
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define vb vector<bool>
#define vc vector<char>
#define mll map<ll,ll>
#define mcl map<char,ll>
#define debug(input) for(auto &i:input)cout<<i<<" ";
#define py cout<<"YES"<<endl;
#define pn cout<<"NO"<<endl;
/*-----------------------------------------------------------------------*/

/*---------------------------------------Number Theory Stuff Below------------------------------------------------------------------------------------*/
ll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}
ll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}
void extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3
ll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b
ll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}
bool revsort(ll a, ll b) {return a > b;}
ll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}
void cse(int t) {cout << "Case " << t << ": ";}
vector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}
ll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}
ll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}
ll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}
ll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m
ll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))
ll fact(ll n){if(n==0)return 1;return n*fact(n-1);}
bool isPrime(ll n){if(n<=1)return false;if(n<=3)return true;if(n%2==0||n%3==0)return false;for(int i=5;i*i<=n;i=i+6)if(n%i==0||n%(i+2)==0)return false;return true;}
bool isPowerOfTwo(ll n){if(n==0)return false;return (ceil(log2(n)) == floor(log2(n)));}
bool isPerfectSquare(ll x){if (x >= 0) {ll sr = sqrt(x);return (sr * sr == x);}return false;}
/*----------------------------------------------------------------------------------------------------------------------------------------------------*/

/*--------------------------------------My Personal Functions--------------------------------------------------------------------------------------------------------------*/
void gc(ll n,ll maxi){unsigned seed = std::chrono::system_clock::now().time_since_epoch().count();std::srand(seed);for (int i = 0; i < n; ++i) {cout<<(rand() % maxi) + 1<<" "; }cout<<endl;}
bool mapFind(map<ll,ll>&m,ll i){return m.find(i)!=m.end();}
bool mapNoFind(map<ll,ll>&m,ll i){return m.find(i)==m.end();}
bool setFind(set<ll>&s,ll i){return s.find(i)!=s.end();}
bool setNoFind(set<ll>&s,ll i){return s.find(i)==s.end();}
bool isOdd(ll n){return n&1;}
bool isEven(ll n){return !(n&1);}
bool isSorted(vector<ll>&temp){for(ll i=0;i<temp.size()-1;i++){if(temp[i]>temp[i+1])return false;}return true;}
/*----------------------------------------------------------------------------------------------------------------------------------------------------*/

void solve(ll t){

}


/*--------------------------Main Function-------------------------*/
signed main(){
   Code By Nitesh05
}
/*----------------------------------------------------------------*/
